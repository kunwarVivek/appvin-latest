---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import PlaceholderImage from '../../components/PlaceholderImage.astro';

// Get all case studies from the content collection
const caseStudiesCollection = await getCollection('case-studies');

// Sort by publication date (newest first)
const caseStudies = caseStudiesCollection.sort((a, b) =>
  new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()
);

// Get all unique industries
const industries = [...new Set(caseStudies.map(study => study.data.industry))].sort();

// Get all unique services
const allServices = [...new Set(caseStudies.flatMap(study => study.data.services))].sort();
---

<Layout
  title="Case Studies | AI Native Digital Agency"
  description="Explore our portfolio of successful AI-native digital transformation and product engineering projects."
>
  <Header />

  <main>
    <!-- Page Header -->
    <section class="pt-32 pb-12 md:pt-40 md:pb-20 bg-gradient-to-b from-white to-gray-50 dark:from-gray-900 dark:to-gray-800 relative overflow-hidden">
      <!-- Decorative elements -->
      <div class="absolute inset-0 pointer-events-none">
        <div class="absolute top-1/4 left-1/4 size-64 bg-primary-500/5 dark:bg-primary-500/10 rounded-full blur-3xl"></div>
        <div class="absolute bottom-1/4 right-1/4 size-64 bg-secondary-500/5 dark:bg-secondary-500/10 rounded-full blur-3xl"></div>
      </div>

      <div class="container mx-auto px-4 sm:px-6 lg:px-8 relative">
        <div class="max-w-4xl mx-auto">
          <div class="flex flex-col items-center text-center">
            <div class="inline-flex items-center justify-center size-16 rounded-full bg-primary-100 dark:bg-primary-900/30 mb-6 animate-in fade-in slide-in-from-bottom-5 duration-500">
              <svg xmlns="http://www.w3.org/2000/svg" class="size-8 text-primary-600 dark:text-primary-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z" />
              </svg>
            </div>

            <h1 class="text-4xl md:text-5xl font-bold text-gray-900 dark:text-white mb-6 animate-in fade-in slide-in-from-bottom-5 duration-500 delay-150">
              <span class="gradient-text">Proven</span> Results for Industry Leaders
            </h1>

            <p class="text-xl text-gray-600 dark:text-gray-400 max-w-3xl animate-in fade-in slide-in-from-bottom-5 duration-500 delay-300">
              We've delivered measurable ROI for enterprises across industries through our AI-powered solutions.
            </p>
          </div>
        </div>
      </div>
    </section>

    <!-- Filters -->
    <section class="py-8 border-b border-gray-200 dark:border-gray-800 sticky top-16 z-10 backdrop-blur-md bg-white/90 dark:bg-gray-900/90">
      <div class="container mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex flex-col md:flex-row md:items-center md:justify-between gap-4">
          <!-- Industry Filter -->
          <div class="relative group">
            <label for="industry-filter" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1 group-hover:text-primary-600 dark:group-hover:text-primary-400 transition-colors">
              Filter by Industry
            </label>
            <div class="relative">
              <select
                id="industry-filter"
                class="w-full md:w-auto pl-4 pr-10 py-2 border border-gray-300 dark:border-gray-700 rounded-lg shadow-sm focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-800 dark:text-white appearance-none transition-all group-hover:border-primary-300 dark:group-hover:border-primary-700"
              >
                <option value="all">All Industries</option>
                {industries.map((industry) => (
                  <option value={industry.toLowerCase()}>{industry}</option>
                ))}
              </select>
              <div class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700 dark:text-gray-300">
                <svg class="size-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                </svg>
              </div>
            </div>
          </div>

          <!-- Service Filter -->
          <div class="relative group">
            <label for="service-filter" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1 group-hover:text-primary-600 dark:group-hover:text-primary-400 transition-colors">
              Filter by Service
            </label>
            <div class="relative">
              <select
                id="service-filter"
                class="w-full md:w-auto pl-4 pr-10 py-2 border border-gray-300 dark:border-gray-700 rounded-lg shadow-sm focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-800 dark:text-white appearance-none transition-all group-hover:border-primary-300 dark:group-hover:border-primary-700"
              >
                <option value="all">All Services</option>
                {allServices.map((service) => (
                  <option value={service.toLowerCase()}>{service}</option>
                ))}
              </select>
              <div class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700 dark:text-gray-300">
                <svg class="size-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                </svg>
              </div>
            </div>
          </div>

          <!-- Search -->
          <div class="flex-1 md:max-w-xs">
            <label for="search-input" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
              Search
            </label>
            <div class="relative">
              <input
                type="text"
                id="search-input"
                placeholder="Search case studies..."
                class="w-full pl-10 pr-4 py-2 border border-gray-300 dark:border-gray-700 rounded-lg shadow-sm focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-800 dark:text-white transition-all"
              />
              <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                <svg xmlns="http://www.w3.org/2000/svg" class="size-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                </svg>
              </div>
            </div>
          </div>

          <!-- Reset Button -->
          <div class="md:self-end">
            <button id="reset-filters" class="px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition-colors flex items-center">
              <svg xmlns="http://www.w3.org/2000/svg" class="size-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
              </svg>
              Reset Filters
            </button>
          </div>
        </div>
      </div>
    </section>

    <!-- Featured Case Studies -->
    <section class="py-16 bg-white dark:bg-gray-900">
      <div class="container mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex items-center justify-between mb-8">
          <h2 class="text-2xl md:text-3xl font-bold text-gray-900 dark:text-white">
            <span class="relative">
              Featured Case Studies
              <span class="absolute -bottom-1 left-0 w-1/2 h-1 bg-gradient-to-r from-primary-500 to-primary-300 dark:from-primary-400 dark:to-primary-600 rounded-full"></span>
            </span>
          </h2>

          <a href="#all-case-studies" class="text-sm font-medium text-primary-600 dark:text-primary-400 hover:text-primary-800 dark:hover:text-primary-300 flex items-center">
            View all
            <svg xmlns="http://www.w3.org/2000/svg" class="size-4 ml-1" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M14.707 10.293a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-3.293-3.293a1 1 0 111.414-1.414l4 4z" clip-rule="evenodd" />
            </svg>
          </a>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {caseStudies.filter(study => study.data.featured).map((study, index) => (
            <div
              class="case-study-card group relative bg-white dark:bg-gray-800 rounded-xl overflow-hidden border border-gray-100 dark:border-gray-700 hover:border-primary-200 dark:hover:border-primary-800 transition-all hover:shadow-xl animate-in fade-in slide-in-from-bottom-5 duration-500"
              data-industry={study.data.industry.toLowerCase()}
              data-services={study.data.services.map(s => s.toLowerCase()).join(' ')}
              style={`animation-delay: ${index * 100}ms`}
            >
              <div class="absolute inset-0 bg-gradient-to-br from-primary-50 to-white dark:from-primary-900/10 dark:to-gray-800 opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>

              <div class="h-48 relative overflow-hidden">
                {study.data.image ? (
                  <img
                    src={study.data.image}
                    alt={study.data.title}
                    class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-105"
                    onerror="this.style.display='none'; this.nextElementSibling.style.display='block';"
                  />
                  <div class="hidden w-full h-full">
                    <PlaceholderImage
                      width={800}
                      height={400}
                      category={study.data.industry === "Healthcare" ? "nature" :
                               study.data.industry === "Finance" ? "business" :
                               study.data.industry === "Retail" ? "business" : "tech"}
                      alt={study.data.title}
                      className="w-full h-full transition-transform duration-500 group-hover:scale-105"
                    />
                  </div>
                ) : (
                  <PlaceholderImage
                    width={800}
                    height={400}
                    category={study.data.industry === "Healthcare" ? "nature" :
                             study.data.industry === "Finance" ? "business" :
                             study.data.industry === "Retail" ? "business" : "tech"}
                    alt={study.data.title}
                    className="w-full h-full transition-transform duration-500 group-hover:scale-105"
                  />
                )}

                <!-- Overlay gradient -->
                <div class="absolute inset-0 bg-gradient-to-t from-black/60 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
              </div>

              <div class="relative p-6">
                <div class="flex items-center justify-between mb-2">
                  <span class="text-sm font-medium text-gray-500 dark:text-gray-400">
                    {study.data.client}
                  </span>
                  <span class="text-xs px-3 py-1 bg-primary-100 dark:bg-primary-900/50 text-primary-800 dark:text-primary-200 rounded-full font-medium">
                    {study.data.industry}
                  </span>
                </div>

                <h3 class="text-xl font-bold text-gray-900 dark:text-white mb-3 group-hover:text-primary-600 dark:group-hover:text-primary-400 transition-colors">
                  {study.data.title}
                </h3>

                <p class="text-gray-600 dark:text-gray-400 mb-4 line-clamp-2">
                  {study.data.description}
                </p>

                <div class="flex flex-wrap gap-2 mb-6">
                  {study.data.services.slice(0, 3).map((service) => (
                    <span class="px-2 py-1 bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-400 rounded-md text-xs">
                      {service}
                    </span>
                  ))}
                  {study.data.services.length > 3 && (
                    <span class="px-2 py-1 bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-400 rounded-md text-xs">
                      +{study.data.services.length - 3} more
                    </span>
                  )}
                </div>

                <a
                  href={`/case-studies/${study.slug}`}
                  class="inline-flex items-center text-primary-600 dark:text-primary-400 hover:text-primary-800 dark:hover:text-primary-300 font-medium group-hover:underline transition-all"
                >
                  View Case Study
                  <svg xmlns="http://www.w3.org/2000/svg" class="size-5 ml-1 transition-transform group-hover:translate-x-1" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
                  </svg>
                </a>
              </div>
            </div>
          ))}
        </div>
      </div>
    </section>

    <!-- All Case Studies -->
    <section id="all-case-studies" class="py-16 bg-gray-50 dark:bg-gray-800">
      <div class="container mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex items-center justify-between mb-8">
          <h2 class="text-2xl md:text-3xl font-bold text-gray-900 dark:text-white">
            <span class="relative">
              All Case Studies
              <span class="absolute -bottom-1 left-0 w-1/2 h-1 bg-gradient-to-r from-primary-500 to-primary-300 dark:from-primary-400 dark:to-primary-600 rounded-full"></span>
            </span>
          </h2>

          <div class="text-sm text-gray-500 dark:text-gray-400">
            <span id="filtered-count">{caseStudies.length}</span> results
          </div>
        </div>

        <div id="case-studies-grid" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {caseStudies.map((study, index) => (
            <div
              class="case-study-card group relative bg-white dark:bg-gray-900 rounded-xl overflow-hidden border border-gray-100 dark:border-gray-700 hover:border-primary-200 dark:hover:border-primary-800 transition-all hover:shadow-xl animate-in fade-in slide-in-from-bottom-5 duration-500"
              data-industry={study.data.industry.toLowerCase()}
              data-services={study.data.services.map(s => s.toLowerCase()).join(' ')}
              style={`animation-delay: ${index * 100}ms`}
            >
              <div class="absolute inset-0 bg-gradient-to-br from-primary-50 to-white dark:from-primary-900/10 dark:to-gray-900 opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>

              <div class="h-48 relative overflow-hidden">
                {study.data.image ? (
                  <img
                    src={study.data.image}
                    alt={study.data.title}
                    class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-105"
                    onerror="this.style.display='none'; this.nextElementSibling.style.display='block';"
                  />
                  <div class="hidden w-full h-full">
                    <PlaceholderImage
                      width={800}
                      height={400}
                      category={study.data.industry === "Healthcare" ? "nature" :
                               study.data.industry === "Finance" ? "business" :
                               study.data.industry === "Retail" ? "business" : "tech"}
                      alt={study.data.title}
                      className="w-full h-full transition-transform duration-500 group-hover:scale-105"
                    />
                  </div>
                ) : (
                  <PlaceholderImage
                    width={800}
                    height={400}
                    category={study.data.industry === "Healthcare" ? "nature" :
                             study.data.industry === "Finance" ? "business" :
                             study.data.industry === "Retail" ? "business" : "tech"}
                    alt={study.data.title}
                    className="w-full h-full transition-transform duration-500 group-hover:scale-105"
                  />
                )}

                <!-- Overlay gradient -->
                <div class="absolute inset-0 bg-gradient-to-t from-black/60 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
              </div>

              <div class="relative p-6">
                <div class="flex items-center justify-between mb-2">
                  <span class="text-sm font-medium text-gray-500 dark:text-gray-400">
                    {study.data.client}
                  </span>
                  <span class="text-xs px-3 py-1 bg-primary-100 dark:bg-primary-900/50 text-primary-800 dark:text-primary-200 rounded-full font-medium">
                    {study.data.industry}
                  </span>
                </div>

                <h3 class="text-xl font-bold text-gray-900 dark:text-white mb-3 group-hover:text-primary-600 dark:group-hover:text-primary-400 transition-colors">
                  {study.data.title}
                </h3>

                <p class="text-gray-600 dark:text-gray-400 mb-4 line-clamp-2">
                  {study.data.description}
                </p>

                <div class="flex flex-wrap gap-2 mb-6">
                  {study.data.services.slice(0, 3).map((service) => (
                    <span class="px-2 py-1 bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-400 rounded-md text-xs">
                      {service}
                    </span>
                  ))}
                  {study.data.services.length > 3 && (
                    <span class="px-2 py-1 bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-400 rounded-md text-xs">
                      +{study.data.services.length - 3} more
                    </span>
                  )}
                </div>

                <a
                  href={`/case-studies/${study.slug}`}
                  class="inline-flex items-center text-primary-600 dark:text-primary-400 hover:text-primary-800 dark:hover:text-primary-300 font-medium group-hover:underline transition-all"
                >
                  View Case Study
                  <svg xmlns="http://www.w3.org/2000/svg" class="size-5 ml-1 transition-transform group-hover:translate-x-1" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
                  </svg>
                </a>
              </div>
            </div>
          ))}
        </div>

        <!-- Empty State -->
        <div id="empty-state" class="hidden py-16 text-center">
          <div class="inline-flex items-center justify-center size-16 rounded-full bg-gray-100 dark:bg-gray-700 mb-4">
            <svg xmlns="http://www.w3.org/2000/svg" class="size-8 text-gray-500 dark:text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
          </div>
          <h3 class="text-xl font-bold text-gray-900 dark:text-white mb-2">No matching case studies</h3>
          <p class="text-gray-600 dark:text-gray-400 mb-6">
            Try adjusting your filters or search terms to find what you're looking for.
          </p>
          <button id="clear-filters" class="btn btn-outline">
            Clear Filters
          </button>
        </div>
      </div>
    </section>

    <!-- CTA Section -->
    <section class="py-20 md:py-28 relative overflow-hidden">
      <div class="absolute inset-0 bg-gradient-to-br from-primary-600 to-primary-800 dark:from-primary-800 dark:to-primary-900"></div>

      <!-- Decorative elements -->
      <div class="absolute top-0 left-0 w-full h-full overflow-hidden pointer-events-none">
        <div class="absolute -top-24 -left-24 size-96 bg-primary-500/20 dark:bg-primary-400/10 rounded-full blur-3xl"></div>
        <div class="absolute -bottom-24 -right-24 size-96 bg-primary-500/20 dark:bg-primary-400/10 rounded-full blur-3xl"></div>

        <svg class="absolute top-0 right-0 text-primary-500/10 dark:text-primary-400/5 size-64 md:size-96" viewBox="0 0 200 200" xmlns="http://www.w3.org/2000/svg">
          <path fill="currentColor" d="M42.7,-73.4C55.3,-67.1,65.7,-56.1,73.5,-43.1C81.3,-30.1,86.6,-15.1,85.9,-0.4C85.2,14.2,78.6,28.4,70.1,41.1C61.6,53.8,51.1,65,38.1,71.6C25.1,78.2,9.6,80.2,-5.5,78.5C-20.6,76.8,-35.3,71.4,-47.5,62.6C-59.7,53.8,-69.5,41.6,-75.2,27.5C-80.9,13.4,-82.6,-2.7,-78.9,-17.1C-75.2,-31.5,-66.1,-44.2,-54.4,-50.6C-42.7,-57,-28.4,-57.1,-14.8,-62.8C-1.2,-68.5,12.8,-79.8,26.8,-79.7C40.8,-79.6,54.8,-68.1,42.7,-73.4Z" transform="translate(100 100)" />
        </svg>
      </div>

      <div class="container mx-auto px-4 sm:px-6 lg:px-8 relative">
        <div class="max-w-4xl mx-auto">
          <div class="bg-white/10 dark:bg-white/5 backdrop-blur-sm rounded-2xl p-8 md:p-12 shadow-xl border border-white/20">
            <div class="text-center">
              <h2 class="text-3xl md:text-4xl font-bold text-white mb-6 animate-in fade-in slide-in-from-bottom-5 duration-500">
                Ready to Create Your Success Story?
              </h2>

              <p class="text-xl text-white/80 mb-8 animate-in fade-in slide-in-from-bottom-5 duration-500 delay-150">
                Contact us today to discuss how our AI-native approach can help you achieve your product engineering goals.
              </p>

              <div class="flex flex-col sm:flex-row justify-center gap-4 animate-in fade-in slide-in-from-bottom-5 duration-500 delay-300">
                <a href="/contact" class="btn bg-white text-primary-600 hover:bg-primary-50 hover:scale-105 transform transition-all text-lg px-8 py-4 shadow-lg">
                  Get Started
                </a>
                <a href="/services" class="btn bg-transparent border-2 border-white text-white hover:bg-white/10 hover:scale-105 transform transition-all text-lg px-8 py-4">
                  Explore Services
                </a>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  </main>

  <Footer />
</Layout>

<script>
  // Enhanced filter functionality
  document.addEventListener('DOMContentLoaded', () => {
    const industryFilter = document.getElementById('industry-filter');
    const serviceFilter = document.getElementById('service-filter');
    const searchInput = document.getElementById('search-input');
    const resetFiltersBtn = document.getElementById('reset-filters');
    const clearFiltersBtn = document.getElementById('clear-filters');
    const caseStudyCards = document.querySelectorAll('.case-study-card');
    const caseStudiesGrid = document.getElementById('case-studies-grid');
    const emptyState = document.getElementById('empty-state');
    const filteredCount = document.getElementById('filtered-count');

    // Filter function
    const filterCaseStudies = () => {
      const industryValue = industryFilter.value.toLowerCase();
      const serviceValue = serviceFilter.value.toLowerCase();
      const searchValue = searchInput.value.toLowerCase();

      let visibleCount = 0;

      caseStudyCards.forEach(card => {
        const industry = card.getAttribute('data-industry');
        const services = card.getAttribute('data-services');
        const title = card.querySelector('h3').textContent.toLowerCase();
        const description = card.querySelector('p').textContent.toLowerCase();

        const matchesIndustry = industryValue === 'all' || industry === industryValue;
        const matchesService = serviceValue === 'all' || services.includes(serviceValue);
        const matchesSearch = searchValue === '' ||
                             title.includes(searchValue) ||
                             description.includes(searchValue);

        if (matchesIndustry && matchesService && matchesSearch) {
          card.style.display = 'block';
          visibleCount++;
        } else {
          card.style.display = 'none';
        }
      });

      // Update count
      if (filteredCount) {
        filteredCount.textContent = visibleCount;
      }

      // Show/hide empty state
      if (visibleCount === 0) {
        caseStudiesGrid.classList.add('hidden');
        emptyState.classList.remove('hidden');
      } else {
        caseStudiesGrid.classList.remove('hidden');
        emptyState.classList.add('hidden');
      }
    };

    // Reset filters function
    const resetFilters = () => {
      industryFilter.value = 'all';
      serviceFilter.value = 'all';
      searchInput.value = '';
      filterCaseStudies();
    };

    // Add event listeners
    industryFilter.addEventListener('change', filterCaseStudies);
    serviceFilter.addEventListener('change', filterCaseStudies);
    searchInput.addEventListener('input', filterCaseStudies);

    // Reset filters buttons
    if (resetFiltersBtn) {
      resetFiltersBtn.addEventListener('click', resetFilters);
    }

    if (clearFiltersBtn) {
      clearFiltersBtn.addEventListener('click', resetFilters);
    }

    // Initialize count
    if (filteredCount) {
      filteredCount.textContent = caseStudyCards.length;
    }
  });
</script>
