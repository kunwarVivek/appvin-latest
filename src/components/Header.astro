---
const navItems = [
  { name: 'Home', url: '/' },
  { name: 'About', url: '/about' },
  { name: 'Services', url: '/services' },
  { name: 'Case Studies', url: '/case-studies' },
  { name: 'Blog', url: '/blog' },
  { name: 'Contact', url: '/contact' },
];

const currentPath = Astro.url.pathname;
---

<header class="fixed top-0 left-0 w-full z-50 bg-white/90 dark:bg-gray-900/90 backdrop-blur-md shadow-sm">
  <div class="container mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center py-4">
      <!-- Logo -->
      <a href="/" class="flex items-center">
        <img src="/images/appvin-logo.png" alt="AppVin Technologies" class="h-10" />
      </a>

      <!-- Desktop Navigation -->
      <nav class="hidden md:flex items-center space-x-8">
        {navItems.map((item) => (
          <a
            href={item.url}
            class={`text-sm font-medium transition-colors ${
              currentPath === item.url || (item.url !== '/' && currentPath.startsWith(item.url))
                ? 'text-primary-600 dark:text-primary-400'
                : 'text-gray-700 hover:text-primary-600 dark:text-gray-300 dark:hover:text-primary-400'
            }`}
          >
            {item.name}
          </a>
        ))}
      </nav>

      <!-- CTA Button & Theme Toggle -->
      <div class="hidden md:flex items-center space-x-4">
        <button
          id="theme-toggle"
          class="p-2 rounded-full text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 transition-colors"
          aria-label="Toggle theme"
        >
          <!-- Sun icon (Light mode) -->
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 theme-sun hidden" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z" />
          </svg>
          <!-- Moon icon (Dark mode) -->
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 theme-moon hidden" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z" />
          </svg>
          <!-- System icon (System preference) -->
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 theme-system hidden" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
          </svg>
        </button>
        <a href="/contact" class="btn btn-primary">Get Started</a>
      </div>

      <!-- Mobile Menu Button -->
      <button
        id="mobile-menu-button"
        class="md:hidden p-2 rounded-md text-gray-700 hover:text-primary-600 dark:text-gray-300 dark:hover:text-primary-400"
        aria-label="Toggle mobile menu"
      >
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
        </svg>
      </button>
    </div>
  </div>

  <!-- Mobile Menu -->
  <div id="mobile-menu" class="hidden md:hidden bg-white dark:bg-gray-900 shadow-md">
    <div class="container mx-auto px-4 py-4 space-y-4">
      {navItems.map((item) => (
        <a
          href={item.url}
          class={`block text-sm font-medium transition-colors ${
            currentPath === item.url || (item.url !== '/' && currentPath.startsWith(item.url))
              ? 'text-primary-600 dark:text-primary-400'
              : 'text-gray-700 hover:text-primary-600 dark:text-gray-300 dark:hover:text-primary-400'
          }`}
        >
          {item.name}
        </a>
      ))}
      <div class="pt-4 flex items-center justify-between border-t border-gray-200 dark:border-gray-700">
        <button
          id="mobile-theme-toggle"
          class="p-2 rounded-full text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 transition-colors"
          aria-label="Toggle theme"
        >
          <!-- Sun icon (Light mode) -->
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 theme-sun hidden" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z" />
          </svg>
          <!-- Moon icon (Dark mode) -->
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 theme-moon hidden" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z" />
          </svg>
          <!-- System icon (System preference) -->
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 theme-system hidden" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
          </svg>
        </button>
        <a href="/contact" class="btn btn-primary">Get Started</a>
      </div>
    </div>
  </div>
</header>

<script>
  // Mobile menu toggle and theme handling
  document.addEventListener('DOMContentLoaded', () => {
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    const mobileThemeToggle = document.getElementById('mobile-theme-toggle');

    // Mobile menu toggle
    if (mobileMenuButton && mobileMenu) {
      mobileMenuButton.addEventListener('click', () => {
        mobileMenu.classList.toggle('hidden');
      });
    }

    // Function to update theme icons visibility
    const updateThemeIcons = (theme) => {
      const sunIcon = document.querySelectorAll('.theme-sun');
      const moonIcon = document.querySelectorAll('.theme-moon');
      const systemIcon = document.querySelectorAll('.theme-system');

      sunIcon.forEach(icon => icon.classList.add('hidden'));
      moonIcon.forEach(icon => icon.classList.add('hidden'));
      systemIcon.forEach(icon => icon.classList.add('hidden'));

      if (theme === 'light') {
        sunIcon.forEach(icon => icon.classList.remove('hidden'));
      } else if (theme === 'dark') {
        moonIcon.forEach(icon => icon.classList.remove('hidden'));
      } else {
        systemIcon.forEach(icon => icon.classList.remove('hidden'));
      }
    };

    // Initialize theme icons
    updateThemeIcons(window.currentTheme || 'system');

    // Mobile theme toggle
    if (mobileThemeToggle) {
      mobileThemeToggle.addEventListener('click', () => {
        // Cycle through themes: system -> light -> dark -> system
        const currentTheme = window.currentTheme || 'system';
        let newTheme;

        if (currentTheme === 'system') {
          newTheme = 'light';
        } else if (currentTheme === 'light') {
          newTheme = 'dark';
        } else {
          newTheme = 'system';
        }

        // Update theme
        window.currentTheme = newTheme;
        localStorage.setItem('theme', newTheme);

        // Apply theme
        if (newTheme === 'dark' || (newTheme === 'system' && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
          document.documentElement.classList.add('dark');
        } else {
          document.documentElement.classList.remove('dark');
        }

        // Update icons
        updateThemeIcons(newTheme);
      });
    }
  });
</script>
