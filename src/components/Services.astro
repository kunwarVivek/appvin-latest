---
import { getCollection } from 'astro:content';

// Get all services from the content collection
const servicesCollection = await getCollection('services');

// Sort services by order property if available
const services = servicesCollection.sort((a, b) => {
  // If order is defined for both, sort by order
  if (a.data.order !== undefined && b.data.order !== undefined) {
    return a.data.order - b.data.order;
  }
  // If only a has order, it comes first
  if (a.data.order !== undefined) {
    return -1;
  }
  // If only b has order, it comes first
  if (b.data.order !== undefined) {
    return 1;
  }
  // If neither has order, sort by title
  return a.data.title.localeCompare(b.data.title);
}).map(service => ({
  title: service.data.title,
  description: service.data.description,
  icon: service.data.icon,
  link: `/services/${service.slug}`,
  features: service.data.features || [],
}));
---

<section id="services" class="py-20 bg-white dark:bg-gray-900 relative overflow-hidden">
  <!-- Background pattern -->
  <div class="absolute inset-0 bg-grid-pattern opacity-5 dark:opacity-3"></div>

  <!-- Decorative elements -->
  <div class="absolute -top-20 -right-20 size-96 bg-primary-100 dark:bg-primary-900/20 rounded-full opacity-30 blur-3xl"></div>
  <div class="absolute -bottom-20 -left-20 size-96 bg-secondary-100 dark:bg-secondary-900/20 rounded-full opacity-30 blur-3xl"></div>

  <div class="container mx-auto px-4 sm:px-6 lg:px-8 relative z-10">
    <div class="text-center max-w-3xl mx-auto mb-20">
      <!-- Section label -->
      <div class="inline-flex items-center px-3 py-1 mb-4 text-xs font-medium rounded-full bg-secondary-100 text-secondary-800 dark:bg-secondary-900/30 dark:text-secondary-300">
        <span class="size-2 bg-secondary-500 rounded-full mr-2"></span>
        Our Services
      </div>

      <h2 class="text-3xl md:text-4xl font-bold text-gray-900 dark:text-white mb-6 tracking-tight">
        <span class="gradient-text">Solutions</span> That Drive Business Growth
      </h2>

      <div class="w-20 h-1 bg-gradient-to-r from-primary-500 to-secondary-500 mx-auto mb-6 rounded-full"></div>

      <p class="text-xl text-gray-600 dark:text-gray-400 leading-relaxed">
        Our AI-powered services deliver measurable ROI through increased efficiency, reduced costs, and accelerated innovation.
      </p>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
      {services.map((service, index) => (
        <div class="bg-white dark:bg-gray-800 rounded-xl p-8 shadow-sm hover:shadow-lg transition-all duration-300 border border-gray-100 dark:border-gray-700 group interactive" data-index={index}>
          <div class="mb-6 text-primary-600 dark:text-primary-400 transition-transform duration-300 group-hover:scale-110 group-hover:text-accent-500 dark:group-hover:text-accent-400">
            {service.icon === 'brain' && (
              <svg xmlns="http://www.w3.org/2000/svg" class="size-14" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
              </svg>
            )}
            {service.icon === 'code' && (
              <svg xmlns="http://www.w3.org/2000/svg" class="size-14" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4" />
              </svg>
            )}
            {service.icon === 'refresh' && (
              <svg xmlns="http://www.w3.org/2000/svg" class="size-14" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
              </svg>
            )}
            {service.icon === 'cloud' && (
              <svg xmlns="http://www.w3.org/2000/svg" class="size-14" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 15a4 4 0 004 4h9a5 5 0 10-.1-9.999 5.002 5.002 0 10-9.78 2.096A4.001 4.001 0 003 15z" />
              </svg>
            )}
            {service.icon === 'chart' && (
              <svg xmlns="http://www.w3.org/2000/svg" class="size-14" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" />
              </svg>
            )}
            {service.icon === 'design' && (
              <svg xmlns="http://www.w3.org/2000/svg" class="size-14" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7 21a4 4 0 01-4-4V5a2 2 0 012-2h4a2 2 0 012 2v12a4 4 0 01-4 4zm0 0h12a2 2 0 002-2v-4a2 2 0 00-2-2h-2.343M11 7.343l1.657-1.657a2 2 0 012.828 0l2.829 2.829a2 2 0 010 2.828l-8.486 8.485M7 17h.01" />
              </svg>
            )}
          </div>

          <h3 class="text-xl font-bold text-gray-900 dark:text-white mb-3 group-hover:text-primary-600 dark:group-hover:text-primary-400 transition-colors">
            {service.title}
          </h3>

          <p class="text-gray-600 dark:text-gray-400 mb-6 leading-relaxed">
            {service.description}
          </p>

          {service.features && service.features.length > 0 && (
            <ul class="mb-6 space-y-2">
              {service.features.slice(0, 3).map((feature) => (
                <li class="flex items-start">
                  <svg xmlns="http://www.w3.org/2000/svg" class="size-5 text-secondary-500 mt-0.5 mr-2 shrink-0" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
                  </svg>
                  <span class="text-sm text-gray-600 dark:text-gray-400">{feature}</span>
                </li>
              ))}
            </ul>
          )}

          <a
            href={service.link}
            class="inline-flex items-center text-primary-600 dark:text-primary-400 hover:text-primary-800 dark:hover:text-primary-300 font-medium group-hover:translate-x-1 transition-transform"
          >
            Learn more
            <svg xmlns="http://www.w3.org/2000/svg" class="size-5 ml-1" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
            </svg>
          </a>
        </div>
      ))}
    </div>

    <div class="text-center mt-16">
      <a href="/services" class="btn btn-outline interactive px-8 py-4">
        View All Services
        <svg xmlns="http://www.w3.org/2000/svg" class="size-5 ml-2" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
        </svg>
      </a>
    </div>
  </div>
</section>

<style>
  .bg-grid-pattern {
    background-image: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%239C92AC' fill-opacity='0.2'%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
  }
</style>

<script>
  // Staggered animation for service cards
  document.addEventListener('DOMContentLoaded', () => {
    const serviceCards = document.querySelectorAll('#services .grid > div');

    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry, i) => {
        if (entry.isIntersecting) {
          // Get the data-index attribute to determine the delay
          const index = parseInt(entry.target.getAttribute('data-index') || '0');
          const delay = index * 100; // 100ms delay between each card

          setTimeout(() => {
            entry.target.classList.add('animate-fade-in');
          }, delay);

          observer.unobserve(entry.target);
        }
      });
    }, { threshold: 0.1 });

    serviceCards.forEach(card => {
      observer.observe(card);
    });
  });
</script>
